# Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

NODE_ENV=development
PORT=3000
HOST=0.0.0.0
API_BASE_URL=http://localhost:3000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection string
DATABASE_URL=postgresql://trustlens:password@localhost:5432/trustlens_dev
DATABASE_SSL=false
DATABASE_POOL_SIZE=10

# Test database (automatically appends _test to main database)
TEST_DATABASE_URL=postgresql://trustlens:password@localhost:5432/trustlens_test

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# AWS S3 CONFIGURATION
# =============================================================================

AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
S3_BUCKET_NAME=trustlens-uploads
S3_BUCKET_REGION=us-east-1

# For local development with MinIO (uncomment if using MinIO)
# S3_ENDPOINT=http://localhost:9000

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# IMPORTANT: Change this to a secure random string in production
JWT_SECRET=your-super-secret-jwt-key-change-in-production-minimum-32-characters
JWT_EXPIRES_IN=24h
BCRYPT_ROUNDS=12

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================

# Sensity AI for deepfake detection
SENSITY_API_KEY=your_sensity_api_key_here

# TruePic for content authenticity
TRUEPIC_API_KEY=your_truepic_api_key_here

# TinEye for reverse image search
TINEYE_API_KEY=your_tineye_api_key_here

# Google Vision API for image analysis
GOOGLE_VISION_API_KEY=your_google_vision_api_key_here
.Âµ 
# OpenAI for advanced analysis (optional\
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# RATE LIMITING & PERFORMANCE
# =============================================================================

# Rate limiting (15 minutes window)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File upload limits
MAX_FILE_SIZE=52428800  # 50MB in bytes
ALLOWED_MIME_TYPES=image/jpeg,image/png,image/webp,image/tiff,image/bmp,video/mp4,video/quicktime,video/x-msvideo,video/webm

# Queue configuration
QUEUE_CONCURRENCY=5
QUEUE_MAX_RETRIES=3
QUEUE_RETRY_DELAY=5000

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

LOG_LEVEL=info
WEBHOOK_TIMEOUT=10000

# Sentry for error tracking (optional)
SENTRY_DSN=your_sentry_dsn_here

# =============================================================================
# FEATURE FLAGS
# =============================================================================

ENABLE_C2PA_VERIFICATION=true
ENABLE_DEEPFAKE_DETECTION=true
ENABLE_REVERSE_SEARCH=true
ENABLE_METADATA_ANALYSIS=true
ENABLE_PDF_REPORTS=true
ENABLE_WEBHOOKS=true

# =============================================================================
# BUSINESS CONFIGURATION
# =============================================================================

# Monthly usage limits by subscription tier
FREE_TIER_MONTHLY_LIMIT=50
PRO_TIER_MONTHLY_LIMIT=1000
ENTERPRISE_TIER_MONTHLY_LIMIT=10000

# =============================================================================
# DEVELOPMENT/TESTING FLAGS
# =============================================================================

# Set to true to disable authentication for testing
DISABLE_AUTH=false

# Set to true to use mock responses instead of calling external APIs
MOCK_EXTERNAL_APIS=true
BCRYPT_ROUNDS=12

# Shopify App
SHOPIFY_API_KEY="your_shopify_api_key"
SHOPIFY_API_SECRET="your_shopify_api_secret"
SHOPIFY_WEBHOOK_SECRET="your_shopify_webhook_secret"
SHOPIFY_APP_URL="https://your-app.ngrok.io"

# WooCommerce Integration
WOOCOMMERCE_CLIENT_ID="your_woocommerce_client_id"
WOOCOMMERCE_CLIENT_SECRET="your_woocommerce_client_secret"

# Monitoring & Logging
SENTRY_DSN="your_sentry_dsn"
LOG_LEVEL="info"

# Email (for notifications)
SMTP_HOST="smtp.gmail.com"
SMTP_PORT=587
SMTP_USER="your_email@gmail.com"
SMTP_PASS="your_app_password"

# Twilio (for SMS verification)
TWILIO_ACCOUNT_SID="your_twilio_account_sid"
TWILIO_AUTH_TOKEN="your_twilio_auth_token"
TWILIO_PHONE_NUMBER="+1234567890"

# Third-party API Configuration
DEEPFAKE_DETECTION_TIMEOUT=30000
REVERSE_IMAGE_TIMEOUT=15000
MAX_FILE_SIZE_MB=50
ANALYSIS_RETRY_ATTEMPTS=3

# Feature Flags
ENABLE_DEEPFAKE_DETECTION=true
ENABLE_TRUEPIC_VERIFICATION=true
ENABLE_MANUAL_REVIEW=true
ENABLE_BILLING=true

# Performance
MAX_CONCURRENT_JOBS=10
QUEUE_CLEANUP_DAYS=7
CACHE_TTL_HOURS=24

# Security
CORS_ORIGIN="http://localhost:3000,https://yourdomain.com"
SECURE_COOKIES=false
TRUST_PROXY=false

# Docker Registry (for deployment)
DOCKER_REGISTRY="your-registry.com"

# Kubernetes Namespace
K8S_NAMESPACE="trustlens"
